#summary Notes on the original Processing application in /trunk/prototype.

== Source Files ==
 * code_swarm.pde - Main 
 * Node.pde - abstract entities which move around
 * PersonNode.pde - represents a person
 * FileNode.pde - represents a file
 * FileEvent.pde - a file committed at a certain time by a certain person
 * Edge.pde - connects Nodes and pulls them together
 * ColorAssigner.pde - maps files to colors using regexes
 * ColorBins.pde - stores histogram bar colors

So far only code_swarm.pde has been cleaned (mildly) and commented.

== Data ==

The files I use as input, which contain the commit events, have two formats: _repository_ and _event_. They both are in XML.
 * Repository-formatted files are organized by the directory structure of the repository. {{{loadRepository()}}} and {{{loadRecurse()}}}
 * Event-formatted files are flat and sorted by time. {{{loadRepEvents()}}}
Why two formats? I needed to use one for another project.

I want to get permission first before uploading the data files. If it is not allowed, then I will create sample ones.

== Assigning Colors ==
The {{{ColorAssigner}}} object is created at construction time and is a flexible way to color your file nodes. It's {{{addRule()}}} method takes one regular expression and two colors, essentially defining a map of file path to color range. During the event loop, when files are introduced to the system, the {{{ColorAssigner.getColor()}}} method looks at the files's path and tries to match it with a regular expression in its list.  The {{{getColor()}}} method then returns a randomly chosen color from a linear interpolation of the range (in RGB space).
Caveats: 
 * If the file does not match any regular expression in the list, a default color is returned.
 * If a file path matches multiple regular expressions in the list, the one added first is chosen.

== Running ==
Download and run the Processing IDE from http://processing.org. Open code_swarm.pde.
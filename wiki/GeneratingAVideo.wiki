#summary Howto generate a video of your project's activity with code_swarm.

= Introduction =

There are several ways to generate a video: 

 * if you want to access a subversion repository, simply run *`runrepositoryfetch.bat`* on windows systems or *`runrepository.sh`* on linux (linux support for this way has not been tested yet). 
A dialog will show up, asking you for the repository url, your username and password. 
The repository gets fetched, converted and codeswarm will be started. This will create the frames of the video for you. If you want to create a real video, see "*Creating the video*" (below).
 * if you want to access a non-svn repository, read on:

This guide explains how to generate a video under a Linux install (it is based on Linux tools) but might be applied to a Windows workstation as well (some other tools might need to be used)

To make it short, generating your video is done in 4 steps :

 # get the activity log out of your versionning system
 # convert the activity log to something code_swarm can use
 # excuting code_swarm
 # making a video out of the exported images

The first step, of course, is to download code_swarm from SVN (check out the [http://code.google.com/p/codeswarm/source/checkout Source Checkout] page for that). You will also need java and ant to build it.

= Getting the activity log =

== SVN ==

To get the activity log from your SVN repository, just get a local copy of your repository, enter the main directory and execute
{{{
  svn log -v > activity.log
}}}

This will create a file called *activity.log*.

== CVS ==

To get the activity log from your CVS repository, just get a local copy of your repository, enter the main directory and execute
{{{
  cvs log > activity.log
}}}

This will create a file called *activity.log*.

== MediaWiki (Using SwarmExport extension) ==

To get a wikiswarm report from the wiki use the maintenance script inside of the SwarmExport extension: [http://svn.nadir-point.com/viewvc/mediawiki-extensions/branches/stable/SwarmExport/]

== Other versionning systems ==

Documentation to come

= Convert the log =

code_swarm has a python converter in its convert_logs directory.
Before you start using it, make sure you read this issue report: [http://code.google.com/p/codeswarm/issues/detail?id=6]

 # Move to the convert_logs directory
 # Copy the activity.log file generated above into the current directory
 # Launch the convert_logs.py script:
  * For SVN use: python convert_logs.py -s activity.log -o activity.xml
  * For CVS use: python convert_logs.py -c activity.log -o activity.xml
  * For MediaWiki using SwarmExport use: python convert_logs.py --wikiswarm-log=activity.log -o activity.xml

This will generate a file called activity.xml. 

At this point, you will not need activity.log anymore, so you can delete it.

= Executing code_swarm =

To execute code_swarm, you need just need *ant* and *javac*. For most people, you just want to check out trunk and use the supplied ant script or run.sh script in that directory. Please refer to the [[HowtoBuild]] Wiki page.

Before running, you will need to configure a config file for your project. /trunk/data has an example of a config file. See the rest of the wiki for more help. 

= Creating the video = 
The previous step created a series of screenshots in the PNG format under the *code_swarm/frames/* directory. Now you want to use them to build a video. MEncoder is one tool to do that. Just get into that frames/ directory and type:

{{{
  mencoder mf://*.png -mf fps=24:type=png -ovc lavc -oac copy -o movie.avi
}}}

For a 15000 commits video, this might take about 40MB, so you want to reduce the size a little bit. You can do that by converting to DivX (MPG4) and reducing the frame rate:

{{{
  mencoder movie.avi  -ovc xvid -oac mp3lame -xvidencopts bitrate=200 -o project-activity.avi
}}}

For a 40MB video, this reduces the size to 10MB. You can also try using the h264 format if your MEncoder has the right libraries to do so:

{{{
  mencoder movie.avi -ovc x264 -oac mp3lame -xvidencopts bitrate=200 -o project-activity2.avi
}}}

To make a high quality .mov (no loss from the frames) suitable for iMovie or Final Cut:

{{{
  ffmpeg -f image2 -r 24 -i ./frames/swarm-%05d.png -sameq ./out.mov -pass 2 
}}}

(Or you can use Quick Time Player to open a image sequence and then save a resulting high quality .mov file.)

That's it, you should have a beautiful video of your project's activity by now!